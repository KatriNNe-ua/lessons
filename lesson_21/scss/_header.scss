@use "sass:math";
.header {
	position: fixed;
	background-color: $mainDarkColor;
		top: 0;
		left: 0;
		width: 100%;
		z-index: 50;
	&__container {		
	
		padding-block: toRem(15);
		display: grid;
		grid-template-columns: 1fr auto 1fr;
		gap: toRem(15);
		justify-content: space-between;
		align-items: center;
		@media (max-width: toEm(845)) {
			grid-template-columns: auto auto;
		}
		@media (min-width: toEm(1310)) {
			padding-block: toRem(20);
		}
	}
	&__logo {
		@include adaptiveValue("max-width", 199, 116);
		width: 100%;
		aspect-ratio: 199 / 60;
		position: relative;
		z-index: 5;
		img {
			width: 100%;
			height: 100%;
			object-fit: contain;
		}
	}
	&__actions {
		position: relative;
		z-index: 5;
		justify-self: end;
		display: flex;
		gap: toRem(6);
		align-items: center;
	}
	&__link {
		flex-shrink: 0;
		padding: toRem(12);
		border-radius: toRem(8);
		border: toRem(4) solid transparent;
		transition: all 0.3s;
		@include adaptiveValue("width", 66, 54);
		width: 100%;
		@media (any-hover: hover) {
			&:hover {
				background-color: $lessDarkColor;
				border: toRem(4) solid $borderColor;
			}
		}
		img {
			width: 100%;
			height: 100%;
			object-fit: contain;
		}
	}
	&__btn-menu {
		display: none;
		@media (max-width: toEm(845)) {
			padding: toRem(12);
			border-radius: toRem(8);
			display: flex;
			align-items: center;
		justify-content: center;
			width: toRem(56);
			aspect-ratio: 1;
			flex-shrink: 0;
			flex-direction: column;
			background-color: $lessDarkColor;
			border: toRem(4) solid $borderColor;

			& span {
				width: 100%;
				height: 2px;
				background-color: #ffffff;
				margin-block: 6px;
				transition: all 0.3s;
				.open-menu & {
					width: 0;
					height: 0;
					margin: 0;
					background-color: transparent;
				}
			}
			&::before {
				content: "";
				width: 100%;
				height: 2px;
				background-color: #ffffff;
				transition: all 0.3s;
				.open-menu & {
					transform: rotate(-45deg) translateY(1.5px);
				}
			}
			&::after {
				content: "";
				width: 50%;
				align-self: flex-end;
				height: 2px;
				background-color: #ffffff;
				transition: all 0.3s;
				.open-menu & {
					width: 100%;
					transform: rotate(45deg) translateY(-1.5px);
				}
			}
		}
	}
}

.menu {
	.open-menu & {
				left: 0;
			}
	@media (max-width: toEm(845)) {
		position: fixed;
		top: 0;
		left: 100%;
		width: 100%;
		height: 100%;
		padding: toRem(100) toRem(15) toRem(30);
		z-index: 3;
		background-color:$moreDarkColor;
		overflow: auto;
		transition: all 0.3s;
	}
	&::before {
		@media (max-width: toEm(845)) {
			content: "";
			width: 100%;
			height: toRem(80);
			position: fixed;
			inset: 0;
			background-color: $mainDarkColor;
			z-index: 4;			
		}
		.open-menu & {
			left: 0;
		}
	}
	&__list {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: toRem(4);
		flex-wrap: wrap;
		padding: toRem(10) toRem(16);
		color: #bfbfbf;
		font-size: toRem(14);
		line-height: 1.5;
		background-color: $moreDarkColor;
		border: toRem(4) solid $borderColor;
		border-radius: toRem(12);
		@media (min-width: toEm(1310)) {
			font-size: toRem(18);
			padding: toRem(8) toRem(14);
			gap: toRem(6);
		}
		@media (max-width: toEm(845)) {
			gap: toRem(35);
			align-items: flex-end;
			justify-content: flex-start;
			flex-direction: column;
			flex-wrap: nowrap;	
			font-size: toRem(22);	
			border: none;	
		}
	}
	&__link {
		padding: toRem(14) toRem(24);
		border-radius: toRem(8);
		transition: all 0.3s;
		@media (any-hover: hover) {
			&:hover {
				color: $mainTextColor;
				background-color: $lessDarkColor;
			}
		}
	}
	&__link--active {
		color: $mainTextColor;
		background-color: $lessDarkColor;
	}
}
